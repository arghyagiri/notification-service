spring:
  application:
    name: customer-service
  datasource:
    url: jdbc:h2:mem:customerDb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driverClassName: org.h2.Driver
    username: admin
    password: admin
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate.ddl-auto: create-drop
    show-sql: true
      #defer-datasource-initialization: true
      #sql:
    #init:
    #mode: always
  h2:
    console:
      enabled: true
  jackson:
    default-property-inclusion: non_empty
  cloud:
    loadbalancer:
      ribbon:
        enabled: false
    openfeign:
      lazy-attributes-resolution: true
  thymeleaf: # Thymeleaf
    cache: true
    mode: HTML
    encoding: UTF-8
    prefix: classpath:/templates/
    #prefix: file:src/main/resources/templates/
  resources: # Static resources
    static-locations: classpath:/static/,file:./pics/
    #static-locations: file:src/main/resources/static/
    cache:
      period: 0
    resources:
    cachecontrol:
      max-age: 365d
    chain:
      strategy:
        content:
          enabled: true
          path: /**

server:
  port: 8084
  servlet:
    context-path: /

management:
  endpoints:
    web:
      exposure:
        include: "*"
        exclude: "env,beans"

springdoc:
  packagesToScan: com.tcs.training

logging:
  level:
    .: INFO

spring.cloud.stream:
  kafka.streams:
    binder:
      brokers: localhost:9092 # just to use it in the service app, Its already 'localhost:9092' by default
      auto-add-partitions: true
      min-partition-count: 1
      state-store-retry:
        max-attempts: 3
        backoff-period: 500
      configuration:
        application.id: ${spring.application.name}
        application.server: localhost:${server.port} # for InteractiveQueryService to describe itself
        state.dir: state-${spring.application.name}-${server.port} # to give a unique dir name in case you run multiple of this app on the same machine
        default.key.serde: org.apache.kafka.common.serialization.Serdes$UUIDSerde
        default.value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
        commit.interval.ms: 1000
        auto.offset.reset: latest